{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Vis\u00e3o Geral RegistrosFuncionariosAPI Esta Interface de Programa\u00e7\u00e3o de Aplica\u00e7\u00e3o (API) proporciona as 4 principais opera\u00e7\u00f5es para controlar registros de funcion\u00e1rios em um banco de dados SGBD MySQL, o famoso CRUD . Create - Opera\u00e7\u00e3o para cadastrar um registro Read - Opera\u00e7\u00e3o para consultar um registro Update - Opera\u00e7\u00e3o para modificar um registro Delete - Opera\u00e7\u00e3o para anular um registro Rotas da API Rotas (endpoint) para acesso \u00e0 RegistrosFuncionariosAPI: Home URL https://registros-funcionarios-api.luishperna.com.br Swagger UI/OpenAPI URL https://registros-funcionarios-api.luishperna.com.br/docs URL https://registros-funcionarios-api.luishperna.com.br/openapi.json Status URL https://registros-funcionarios-api.luishperna.com.br/status Cadastros URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/cadastros Consultas URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/{cpf} Modifica\u00e7\u00f5es URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/modificacoes Anula\u00e7\u00f5es URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/{cpf} Compatibilidade da API A RegistrosFuncionariosAPI utiliza do formato JSON para realizar as comunica\u00e7\u00f5es entre os sistemas, assim facilitando o tr\u00e1fego de dados entre aplica\u00e7\u00f5es distintas e havendo um ponto em comum entre diversas linguagens de programa\u00e7\u00e3o. M\u00e9todos da API A API utiliza de 4 m\u00e9todos de requisi\u00e7\u00e3o HTTP respons\u00e1veis por indicar as a\u00e7\u00f5es a serem executadas para um dado recurso. POST - M\u00e9todo utilizado para criar um recurso GET - M\u00e9todo utilizado para pegar um recurso PATCH - M\u00e9todo utilizado para atualizar uma parte de um recurso DELETE - M\u00e9todo utilizado para excluir um recurso Banco de Dados Desenvolvido para a API Estrutura do Banco de Dados A estrutura\u00e7\u00e3o do banco de dados foi criada para receber os principais dados dos funcion\u00e1rios, como mostrado na tabela abaixo: Dados do funcion\u00e1rio Aceita\u00e7\u00e3o de valores duplicados Obrigatoriedade C\u00f3digo de identifica\u00e7\u00e3o \u274c \u2714\ufe0f Nome \u2714\ufe0f \u2714\ufe0f Data de nascimento \u2714\ufe0f \u2714\ufe0f CPF \u274c \u2714\ufe0f Email \u274c \u2714\ufe0f Cargo \u2714\ufe0f \u2714\ufe0f Data de in\u00edcio ou entrada \u2714\ufe0f \u2714\ufe0f Data de cancelamento \u2714\ufe0f Aceita valor NULL Comportamento \u2714\ufe0f Aceita string vazia Modelagem do Banco de Dados A API integra com um banco de dados SGBD MySQL hospedado e modelado unicamente para essa aplica\u00e7\u00e3o. A imagem a seguir exibe mais detalhamento da modelagem implementada:","title":"Vis\u00e3o Geral"},{"location":"#visao-geral","text":"","title":"Vis\u00e3o Geral"},{"location":"#registrosfuncionariosapi","text":"Esta Interface de Programa\u00e7\u00e3o de Aplica\u00e7\u00e3o (API) proporciona as 4 principais opera\u00e7\u00f5es para controlar registros de funcion\u00e1rios em um banco de dados SGBD MySQL, o famoso CRUD . Create - Opera\u00e7\u00e3o para cadastrar um registro Read - Opera\u00e7\u00e3o para consultar um registro Update - Opera\u00e7\u00e3o para modificar um registro Delete - Opera\u00e7\u00e3o para anular um registro","title":"RegistrosFuncionariosAPI"},{"location":"#rotas-da-api","text":"Rotas (endpoint) para acesso \u00e0 RegistrosFuncionariosAPI: Home URL https://registros-funcionarios-api.luishperna.com.br Swagger UI/OpenAPI URL https://registros-funcionarios-api.luishperna.com.br/docs URL https://registros-funcionarios-api.luishperna.com.br/openapi.json Status URL https://registros-funcionarios-api.luishperna.com.br/status Cadastros URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/cadastros Consultas URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/{cpf} Modifica\u00e7\u00f5es URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/modificacoes Anula\u00e7\u00f5es URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/{cpf}","title":"Rotas da API"},{"location":"#compatibilidade-da-api","text":"A RegistrosFuncionariosAPI utiliza do formato JSON para realizar as comunica\u00e7\u00f5es entre os sistemas, assim facilitando o tr\u00e1fego de dados entre aplica\u00e7\u00f5es distintas e havendo um ponto em comum entre diversas linguagens de programa\u00e7\u00e3o.","title":"Compatibilidade da API"},{"location":"#metodos-da-api","text":"A API utiliza de 4 m\u00e9todos de requisi\u00e7\u00e3o HTTP respons\u00e1veis por indicar as a\u00e7\u00f5es a serem executadas para um dado recurso. POST - M\u00e9todo utilizado para criar um recurso GET - M\u00e9todo utilizado para pegar um recurso PATCH - M\u00e9todo utilizado para atualizar uma parte de um recurso DELETE - M\u00e9todo utilizado para excluir um recurso","title":"M\u00e9todos da API"},{"location":"#banco-de-dados-desenvolvido-para-a-api","text":"","title":"Banco de Dados Desenvolvido para a API"},{"location":"#estrutura-do-banco-de-dados","text":"A estrutura\u00e7\u00e3o do banco de dados foi criada para receber os principais dados dos funcion\u00e1rios, como mostrado na tabela abaixo: Dados do funcion\u00e1rio Aceita\u00e7\u00e3o de valores duplicados Obrigatoriedade C\u00f3digo de identifica\u00e7\u00e3o \u274c \u2714\ufe0f Nome \u2714\ufe0f \u2714\ufe0f Data de nascimento \u2714\ufe0f \u2714\ufe0f CPF \u274c \u2714\ufe0f Email \u274c \u2714\ufe0f Cargo \u2714\ufe0f \u2714\ufe0f Data de in\u00edcio ou entrada \u2714\ufe0f \u2714\ufe0f Data de cancelamento \u2714\ufe0f Aceita valor NULL Comportamento \u2714\ufe0f Aceita string vazia","title":"Estrutura do Banco de Dados"},{"location":"#modelagem-do-banco-de-dados","text":"A API integra com um banco de dados SGBD MySQL hospedado e modelado unicamente para essa aplica\u00e7\u00e3o. A imagem a seguir exibe mais detalhamento da modelagem implementada:","title":"Modelagem do Banco de Dados"},{"location":"developer/","text":"Desenvolvedor Ol\u00e1! \ud83d\udc4b Estou grato em t\u00ea-lo(a) aqui \ud83d\ude01 Este sou eu: Me chamo Lu\u00eds Henrique Perna , estou graduando em Engenharia de Software e esse \u00e9 mais um projetinho fonte de meus estudos na \u00e1rea de desenvolvimento de aplica\u00e7\u00f5es. \ud83c\udf10 Meu Portf\u00f3lio \ud83c\udf10 Perfil GitHub Desenvolvi a RegistrosFuncionariosApi com o intuito de aprender mais sobre APIs, al\u00e9m de gregar tamb\u00e9m a cerca de documenta\u00e7\u00f5es de softwares, como essa aqui.","title":"Desenvolvedor"},{"location":"developer/#desenvolvedor","text":"Ol\u00e1! \ud83d\udc4b Estou grato em t\u00ea-lo(a) aqui \ud83d\ude01 Este sou eu: Me chamo Lu\u00eds Henrique Perna , estou graduando em Engenharia de Software e esse \u00e9 mais um projetinho fonte de meus estudos na \u00e1rea de desenvolvimento de aplica\u00e7\u00f5es. \ud83c\udf10 Meu Portf\u00f3lio \ud83c\udf10 Perfil GitHub Desenvolvi a RegistrosFuncionariosApi com o intuito de aprender mais sobre APIs, al\u00e9m de gregar tamb\u00e9m a cerca de documenta\u00e7\u00f5es de softwares, como essa aqui.","title":"Desenvolvedor"},{"location":"important/","text":"Importante \u26a0\ufe0f \u26a0\ufe0f LEIA ANTES DE TESTAR OU USAR A API \u26a0\ufe0f Finalidade da API A API foi desenvolvida com a finalidade de simular uma aplicabilidade em uma empresa fict\u00edcia, sendo assim, n\u00e3o apresentando usabilidade real. O foco da RegistrosFuncionariosApi \u00e9 apenas para fins de estudo pessoal sobre Interface de Programa\u00e7\u00e3o de Aplica\u00e7\u00f5es. Restri\u00e7\u00e3o do uso da API \ud83d\udeab A utiliza\u00e7\u00e3o da RegistrosFuncionariosAPI est\u00e1 restrita apenas para testes ou fins de estudo sobre consumo de API , visto que os dados inseridos poderam ser acessados, alterados ou apagados por qualquer usu\u00e1rio com acesso a API. Al\u00e9m disso, a API e o banco de dados est\u00e3o sujeitos a paradas ou desligamento por fatores externos, como os servi\u00e7os de hospedagens utilizados para o deploy das aplica\u00e7\u00f5es. Cuidados com Informa\u00e7\u00f5es Pessoais Como mencionado anteriormente, as informa\u00e7\u00f5es inseridas correm o risco de serem acessadas, alteradas ou apagadas por qualquer usu\u00e1rio com acesso a API, visto que a integra\u00e7\u00e3o com o banco de dados n\u00e3o apresenta autentica\u00e7\u00e3o, o que acarreta em acesso p\u00fablico aos dados armazenados. Recomendo fortemente que para os testes ou uso da API sejam inseridas informa\u00e7\u00f5es falsas ao realizar um cadastro de um funcion\u00e1rio.","title":"Importante \u26a0\ufe0f"},{"location":"important/#importante","text":"\u26a0\ufe0f LEIA ANTES DE TESTAR OU USAR A API \u26a0\ufe0f","title":"Importante \u26a0\ufe0f"},{"location":"important/#finalidade-da-api","text":"A API foi desenvolvida com a finalidade de simular uma aplicabilidade em uma empresa fict\u00edcia, sendo assim, n\u00e3o apresentando usabilidade real. O foco da RegistrosFuncionariosApi \u00e9 apenas para fins de estudo pessoal sobre Interface de Programa\u00e7\u00e3o de Aplica\u00e7\u00f5es.","title":"Finalidade da API"},{"location":"important/#restricao-do-uso-da-api","text":"A utiliza\u00e7\u00e3o da RegistrosFuncionariosAPI est\u00e1 restrita apenas para testes ou fins de estudo sobre consumo de API , visto que os dados inseridos poderam ser acessados, alterados ou apagados por qualquer usu\u00e1rio com acesso a API. Al\u00e9m disso, a API e o banco de dados est\u00e3o sujeitos a paradas ou desligamento por fatores externos, como os servi\u00e7os de hospedagens utilizados para o deploy das aplica\u00e7\u00f5es.","title":"Restri\u00e7\u00e3o do uso da API \ud83d\udeab"},{"location":"important/#cuidados-com-informacoes-pessoais","text":"Como mencionado anteriormente, as informa\u00e7\u00f5es inseridas correm o risco de serem acessadas, alteradas ou apagadas por qualquer usu\u00e1rio com acesso a API, visto que a integra\u00e7\u00e3o com o banco de dados n\u00e3o apresenta autentica\u00e7\u00e3o, o que acarreta em acesso p\u00fablico aos dados armazenados. Recomendo fortemente que para os testes ou uso da API sejam inseridas informa\u00e7\u00f5es falsas ao realizar um cadastro de um funcion\u00e1rio.","title":"Cuidados com Informa\u00e7\u00f5es Pessoais"},{"location":"source_codes/","text":"C\u00f3digos-fontes Hospedagem dos C\u00f3digos-fontes O c\u00f3digo-fonte da API est\u00e1 dispon\u00edvel no reposit\u00f3rio remoto: https://github.com/luishperna/registros_funcionarios_api O c\u00f3digo-fonte da documenta\u00e7\u00e3o API est\u00e1 dispon\u00edvel no reposit\u00f3rio remoto: https://github.com/luishperna/registros_funcionarios_api_docs T\u00e9cnologias Utilizadas A RegistrosFuncionariosAPI foi desenvolvida a partir das seguintes t\u00e9cnologias: Linguagem de Programa\u00e7\u00e3o: python Framework Web: FastAPI Valida\u00e7\u00e3o de Dados: pydantic Servidor Web ASGI: uvicorn SGBD: MySQL Driver MySQL: mysql-connector-python Gerenciamento Vari\u00e1veis de Ambiente: python-dotenv Hospedagem/Deploy: API: Vercel MySQL: TiDB Cloud Editor de C\u00f3digo/IDE: visual studio code Versionamento e reposit\u00f3rio remoto: git github","title":"C\u00f3digos-fontes"},{"location":"source_codes/#codigos-fontes","text":"","title":"C\u00f3digos-fontes"},{"location":"source_codes/#hospedagem-dos-codigos-fontes","text":"O c\u00f3digo-fonte da API est\u00e1 dispon\u00edvel no reposit\u00f3rio remoto: https://github.com/luishperna/registros_funcionarios_api O c\u00f3digo-fonte da documenta\u00e7\u00e3o API est\u00e1 dispon\u00edvel no reposit\u00f3rio remoto: https://github.com/luishperna/registros_funcionarios_api_docs","title":"Hospedagem dos C\u00f3digos-fontes"},{"location":"source_codes/#tecnologias-utilizadas","text":"A RegistrosFuncionariosAPI foi desenvolvida a partir das seguintes t\u00e9cnologias: Linguagem de Programa\u00e7\u00e3o: python Framework Web: FastAPI Valida\u00e7\u00e3o de Dados: pydantic Servidor Web ASGI: uvicorn SGBD: MySQL Driver MySQL: mysql-connector-python Gerenciamento Vari\u00e1veis de Ambiente: python-dotenv Hospedagem/Deploy: API: Vercel MySQL: TiDB Cloud Editor de C\u00f3digo/IDE: visual studio code Versionamento e reposit\u00f3rio remoto: git github","title":"T\u00e9cnologias Utilizadas"},{"location":"test_api/","text":"Testar API \"T\u00e1 bom, t\u00e1 bom... j\u00e1 entendi, mais s\u00f3 queria testar aqui rapidinho mesmo para matar a curiosidade, como fa\u00e7o?\", disse Algu\u00e9m. Como testar a RegistrosFuncionariosApi Primeiramente, para realizar os testes na API rapidamente e de maneira intuitiva, acesse o link abaixo: \ud83d\uddb1\ufe0f https://registros-funcionarios-api.luishperna.com.br/docs Ap\u00f3s o carregamento da p\u00e1gina, ser\u00e1 poss\u00edvel acessar as rotas da API para test\u00e1-las, como mostrado na imagem a seguir: Escolha uma das opera\u00e7\u00f5es mostradas no qual deseja executar. Opera\u00e7\u00f5es da API Clique na opera\u00e7\u00e3o escolhida e siga a orienta\u00e7\u00e3o abaixo correspondente a sua escolha. \ud83d\udc40 Home da API Para testar essa opera\u00e7\u00e3o basta clicar em Try it out e posteriormente em Execute . O retorno ser\u00e1 um JSON contento as informa\u00e7\u00f5es sobre a API, como o mostrado abaixo: { \"Aplica\u00e7\u00e3o\" : \"Web/API\" , \"Projeto\" : \"RegistrosFuncionariosApi\" , \"Usabilidade\" : \"Opera\u00e7\u00f5es CRUD de registros de funcion\u00e1rios no banco de dados\" , \"Documenta\u00e7\u00e3o\" : \"https://registros-funcionarios-api-docs.luishperna.com.br\" , \"Rotas\" : { \"/\" : \"M\u00e9todo GET - Home da API\" , \"/docs\" : \"Swagger UI da API\" , \"/openapi.json\" : \"OpenAPI da API\" , \"/status\" : \"M\u00e9todo GET - Status da API\" , \"/funcionarios/cadastros\" : \"M\u00e9todo POST - Cadastrar um registro\" , \"/funcionarios/consultas/{cpf}\" : \"M\u00e9todo GET - Consultar um registro\" , \"/funcionarios/modificacoes\" : \"M\u00e9todo PATCH - Modificar um registro\" , \"/funcionarios/anulacoes/{cpf}\" : \"M\u00e9todo DELETE - Anular um registro\" }, \"Finalidade\" : \"Simula\u00e7\u00e3o/Estudo\" , \"Desenvolvedor\" : \"Lu\u00eds Henrique Perna\" } \u2705 Verificar status da API Para testar essa opera\u00e7\u00e3o basta clicar em Try it out e posteriormente em Execute . O retorno ser\u00e1 um JSON informando se a API est\u00e1 rodando, como o mostrado abaixo: { \"Status\" : \"API rodando\" } \u270f\ufe0f Cadastrar funcion\u00e1rio Para testar essa opera\u00e7\u00e3o clique em Try it out , no campo Request body aparecer\u00e1 o seguinte JSON : { \"nome\" : \"string\" , \"data_nascimento\" : \"string\" , \"cpf\" : \"string\" , \"email\" : \"string\" , \"codigo\" : 0 , \"cargo\" : \"string\" , \"data_inicio\" : \"string\" , \"data_cancelamento\" : \"string\" , \"comportamento\" : \"string\" } Altere os valores das chaves, seguindo a Indica\u00e7\u00e3o ao Inserir Dados Falsos . Atente-se tamb\u00e9m a Aceita\u00e7\u00e3o de valores duplicados da Estrutura do Banco de Dados. Exemplo: { \"nome\" : \"Peter Jason Quill\" , \"data_nascimento\" : \"1980-12-20\" , \"cpf\" : \"123.123.123-12\" , \"email\" : \"perterquill@gmail.com\" , \"codigo\" : 2201 , \"cargo\" : \"Desenvolvedor Web\" , \"data_inicio\" : \"2022-09-07\" , \"data_cancelamento\" : \"NULL\" , \"comportamento\" : \"Proativo\" } O retorno ser\u00e1 um JSON informando se o cadastro foi realizado com sucesso \u2714\ufe0f { \"Status\" : \"Cadastrado realizado com sucesso!\" , \"Funcion\u00e1rio(a)\" : \"Peter Jason Quill\" , \"C\u00f3digo\" : \"2201\" } Ou se houve algum tipo de erro \u274c { \"Status\" : \"Erro ao cadastrar\" , \"Tipo de erro\" : \"1062 (23000): Duplicate entry '2201' for key 'dados_pessoais.codigo'\" , \"Causas\" : \"Dados duplicados, faltantes ou incorretos\" } \ud83d\udd0e Consultar funcion\u00e1rio Para testar essa opera\u00e7\u00e3o clique em Try it out , no campo Parameters digite um CPF j\u00e1 cadastrado no sistema, exemplo: Ap\u00f3s clicar em Execute , o retorno ser\u00e1 um JSON contendo as informa\u00e7\u00f5es do funcion\u00e1rio correspondente ao CPF \u2714\ufe0f { \"codigo\" : \"2201\" , \"nome\" : \"Peter Jason Quill\" , \"data_nascimento\" : \"1980-12-20\" , \"cpf\" : \"123.123.123-12\" , \"email\" : \"perterquill@gmail.com\" , \"cargo\" : \"Desenvolvedor Web\" , \"data_inicio\" : \"2022-09-07\" , \"data_cancelamento\" : \"None\" , \"comportamento\" : \"Proativo\" } Caso haver erro ao consultar o retorno ser\u00e1 um JSON informando o de erro \u274c { \"Status\" : \"Erro ao consultar\" , \"Tipo de erro\" : \"CPF incorreto ou n\u00e3o cadastrado\" } \ud83d\udd27 Modificar informa\u00e7\u00f5es Para testar essa opera\u00e7\u00e3o clique em Try it out , no campo Request body aparecer\u00e1 o seguinte JSON : { \"codigo\" : 0 , \"atributo\" : \"string\" , \"novo_valor\" : \"string\" } Altere os valores das chaves, seguindo a Indica\u00e7\u00e3o ao Inserir Dados Falsos . Atente-se tamb\u00e9m a Aceita\u00e7\u00e3o de valores duplicados da Estrutura do Banco de Dados. Exemplo: { \"codigo\" : 2201 , \"atributo\" : \"data_inicio\" , \"novo_valor\" : \"2022-09-12\" } O retorno ser\u00e1 um JSON informando se a modifica\u00e7\u00e3o foi realizado com sucesso \u2714\ufe0f { \"Status\" : \"2201 - Modifica\u00e7\u00e3o realizado com sucesso!\" , \"Atualiza\u00e7\u00e3o\" : \"Atributo data_inicio setado para 2022-09-12\" } Ou se houve algum tipo de erro \u274c # Erro ao tentar modi f icar um a tr ibu t o n \u00e3o permi t ido { \"Status\" : \"Erro ao modificar\" , \"Tipo de erro\" : \"O atributo codigo n\u00e3o pode ser modificado\" } # Erro ao i nf ormar um a tr ibu t o ou valor i n corre ta me nte { \"Status\" : \"Erro ao modificar\" , \"Tipo de erro\" : \"1054 (42S22): Unknown column 'dat_inicio' in 'field list'\" , \"Causas\" : \"Dados faltantes ou incorretos\" } \ud83e\uddf9 Anular registro Para testar essa opera\u00e7\u00e3o clique em Try it out , no campo Parameters digite um CPF que deseja anular o registro no sistema, exemplo: O retorno ser\u00e1 um JSON informando se a anula\u00e7\u00e3o do registro foi realizado com sucesso \u2714\ufe0f { \"Status\" : \"Anula\u00e7\u00e3o realizada com sucesso!\" , \"Anula\u00e7\u00e3o\" : \"Deletado registro com CPF 123.123.123-12\" } Observa\u00e7\u00e3o A resposta ser\u00e1 a mesma caso o CPF n\u00e3o esteja registrado.","title":"Testar API"},{"location":"test_api/#testar-api","text":"\"T\u00e1 bom, t\u00e1 bom... j\u00e1 entendi, mais s\u00f3 queria testar aqui rapidinho mesmo para matar a curiosidade, como fa\u00e7o?\", disse Algu\u00e9m.","title":"Testar API"},{"location":"test_api/#como-testar-a-registrosfuncionariosapi","text":"Primeiramente, para realizar os testes na API rapidamente e de maneira intuitiva, acesse o link abaixo: \ud83d\uddb1\ufe0f https://registros-funcionarios-api.luishperna.com.br/docs Ap\u00f3s o carregamento da p\u00e1gina, ser\u00e1 poss\u00edvel acessar as rotas da API para test\u00e1-las, como mostrado na imagem a seguir: Escolha uma das opera\u00e7\u00f5es mostradas no qual deseja executar.","title":"Como testar a RegistrosFuncionariosApi"},{"location":"test_api/#operacoes-da-api","text":"Clique na opera\u00e7\u00e3o escolhida e siga a orienta\u00e7\u00e3o abaixo correspondente a sua escolha.","title":"Opera\u00e7\u00f5es da API"},{"location":"test_api/#home-da-api","text":"Para testar essa opera\u00e7\u00e3o basta clicar em Try it out e posteriormente em Execute . O retorno ser\u00e1 um JSON contento as informa\u00e7\u00f5es sobre a API, como o mostrado abaixo: { \"Aplica\u00e7\u00e3o\" : \"Web/API\" , \"Projeto\" : \"RegistrosFuncionariosApi\" , \"Usabilidade\" : \"Opera\u00e7\u00f5es CRUD de registros de funcion\u00e1rios no banco de dados\" , \"Documenta\u00e7\u00e3o\" : \"https://registros-funcionarios-api-docs.luishperna.com.br\" , \"Rotas\" : { \"/\" : \"M\u00e9todo GET - Home da API\" , \"/docs\" : \"Swagger UI da API\" , \"/openapi.json\" : \"OpenAPI da API\" , \"/status\" : \"M\u00e9todo GET - Status da API\" , \"/funcionarios/cadastros\" : \"M\u00e9todo POST - Cadastrar um registro\" , \"/funcionarios/consultas/{cpf}\" : \"M\u00e9todo GET - Consultar um registro\" , \"/funcionarios/modificacoes\" : \"M\u00e9todo PATCH - Modificar um registro\" , \"/funcionarios/anulacoes/{cpf}\" : \"M\u00e9todo DELETE - Anular um registro\" }, \"Finalidade\" : \"Simula\u00e7\u00e3o/Estudo\" , \"Desenvolvedor\" : \"Lu\u00eds Henrique Perna\" }","title":"\ud83d\udc40 Home da API"},{"location":"test_api/#verificar-status-da-api","text":"Para testar essa opera\u00e7\u00e3o basta clicar em Try it out e posteriormente em Execute . O retorno ser\u00e1 um JSON informando se a API est\u00e1 rodando, como o mostrado abaixo: { \"Status\" : \"API rodando\" }","title":"\u2705 Verificar status da API"},{"location":"test_api/#cadastrar-funcionario","text":"Para testar essa opera\u00e7\u00e3o clique em Try it out , no campo Request body aparecer\u00e1 o seguinte JSON : { \"nome\" : \"string\" , \"data_nascimento\" : \"string\" , \"cpf\" : \"string\" , \"email\" : \"string\" , \"codigo\" : 0 , \"cargo\" : \"string\" , \"data_inicio\" : \"string\" , \"data_cancelamento\" : \"string\" , \"comportamento\" : \"string\" } Altere os valores das chaves, seguindo a Indica\u00e7\u00e3o ao Inserir Dados Falsos . Atente-se tamb\u00e9m a Aceita\u00e7\u00e3o de valores duplicados da Estrutura do Banco de Dados. Exemplo: { \"nome\" : \"Peter Jason Quill\" , \"data_nascimento\" : \"1980-12-20\" , \"cpf\" : \"123.123.123-12\" , \"email\" : \"perterquill@gmail.com\" , \"codigo\" : 2201 , \"cargo\" : \"Desenvolvedor Web\" , \"data_inicio\" : \"2022-09-07\" , \"data_cancelamento\" : \"NULL\" , \"comportamento\" : \"Proativo\" } O retorno ser\u00e1 um JSON informando se o cadastro foi realizado com sucesso \u2714\ufe0f { \"Status\" : \"Cadastrado realizado com sucesso!\" , \"Funcion\u00e1rio(a)\" : \"Peter Jason Quill\" , \"C\u00f3digo\" : \"2201\" } Ou se houve algum tipo de erro \u274c { \"Status\" : \"Erro ao cadastrar\" , \"Tipo de erro\" : \"1062 (23000): Duplicate entry '2201' for key 'dados_pessoais.codigo'\" , \"Causas\" : \"Dados duplicados, faltantes ou incorretos\" }","title":"\u270f\ufe0f Cadastrar funcion\u00e1rio"},{"location":"test_api/#consultar-funcionario","text":"Para testar essa opera\u00e7\u00e3o clique em Try it out , no campo Parameters digite um CPF j\u00e1 cadastrado no sistema, exemplo: Ap\u00f3s clicar em Execute , o retorno ser\u00e1 um JSON contendo as informa\u00e7\u00f5es do funcion\u00e1rio correspondente ao CPF \u2714\ufe0f { \"codigo\" : \"2201\" , \"nome\" : \"Peter Jason Quill\" , \"data_nascimento\" : \"1980-12-20\" , \"cpf\" : \"123.123.123-12\" , \"email\" : \"perterquill@gmail.com\" , \"cargo\" : \"Desenvolvedor Web\" , \"data_inicio\" : \"2022-09-07\" , \"data_cancelamento\" : \"None\" , \"comportamento\" : \"Proativo\" } Caso haver erro ao consultar o retorno ser\u00e1 um JSON informando o de erro \u274c { \"Status\" : \"Erro ao consultar\" , \"Tipo de erro\" : \"CPF incorreto ou n\u00e3o cadastrado\" }","title":"\ud83d\udd0e Consultar funcion\u00e1rio"},{"location":"test_api/#modificar-informacoes","text":"Para testar essa opera\u00e7\u00e3o clique em Try it out , no campo Request body aparecer\u00e1 o seguinte JSON : { \"codigo\" : 0 , \"atributo\" : \"string\" , \"novo_valor\" : \"string\" } Altere os valores das chaves, seguindo a Indica\u00e7\u00e3o ao Inserir Dados Falsos . Atente-se tamb\u00e9m a Aceita\u00e7\u00e3o de valores duplicados da Estrutura do Banco de Dados. Exemplo: { \"codigo\" : 2201 , \"atributo\" : \"data_inicio\" , \"novo_valor\" : \"2022-09-12\" } O retorno ser\u00e1 um JSON informando se a modifica\u00e7\u00e3o foi realizado com sucesso \u2714\ufe0f { \"Status\" : \"2201 - Modifica\u00e7\u00e3o realizado com sucesso!\" , \"Atualiza\u00e7\u00e3o\" : \"Atributo data_inicio setado para 2022-09-12\" } Ou se houve algum tipo de erro \u274c # Erro ao tentar modi f icar um a tr ibu t o n \u00e3o permi t ido { \"Status\" : \"Erro ao modificar\" , \"Tipo de erro\" : \"O atributo codigo n\u00e3o pode ser modificado\" } # Erro ao i nf ormar um a tr ibu t o ou valor i n corre ta me nte { \"Status\" : \"Erro ao modificar\" , \"Tipo de erro\" : \"1054 (42S22): Unknown column 'dat_inicio' in 'field list'\" , \"Causas\" : \"Dados faltantes ou incorretos\" }","title":"\ud83d\udd27 Modificar informa\u00e7\u00f5es"},{"location":"test_api/#anular-registro","text":"Para testar essa opera\u00e7\u00e3o clique em Try it out , no campo Parameters digite um CPF que deseja anular o registro no sistema, exemplo: O retorno ser\u00e1 um JSON informando se a anula\u00e7\u00e3o do registro foi realizado com sucesso \u2714\ufe0f { \"Status\" : \"Anula\u00e7\u00e3o realizada com sucesso!\" , \"Anula\u00e7\u00e3o\" : \"Deletado registro com CPF 123.123.123-12\" } Observa\u00e7\u00e3o A resposta ser\u00e1 a mesma caso o CPF n\u00e3o esteja registrado.","title":"\ud83e\uddf9 Anular registro"},{"location":"guide/","text":"Considera\u00e7\u00f5es Iniciais Atraso ao Consumir a API Ao consumir a RegistrosFuncionariosAPI poder\u00e1 haver um certo atraso (delay) de execu\u00e7\u00e3o acarretado por fatores das hospedagens, tanto do banco de dados, quanto da API em si. Observa\u00e7\u00e3o: A primeira executa\u00e7\u00e3o pode apresentar um aumento nesse atraso pelo fato de estar iniciando a sua execu\u00e7\u00e3o no servidor hospedado. Consumindo API no Navegador Vale ressaltar que os navegadores s\u00f3 aceitam requisi\u00e7\u00f5es HTTP que utilizam do m\u00e9todo GET , sendo assim algumas rotas ( URL ) desta API n\u00e3o poder\u00e3o ser executadas diretamento pelo navegador. Observa\u00e7\u00e3o Os m\u00e9todos de cada rota est\u00e3o informados neste Guia de Uso e na rota Home da API . Indica\u00e7\u00e3o ao Inserir Dados Falsos Para melhor experi\u00eancia indico o uso de dados falsos que seguem os mesmos padr\u00f5es/formatos e n\u00fameros de caracteres dos dados ver\u00eddicos, como mostrado abaixo: Campos de Preenchimento Dados falsos fora dos padr\u00f5es \u274c Dados falsos seguindo os padr\u00f5es \u2714\ufe0f C\u00f3digo de identifica\u00e7\u00e3o 22sdwA01 2201 Nome senhor das Estrelas Peter Jason Quill Data de nascimento 0093-13-31 1980-12-20 CPF 1.23.12-312312 123.123.123-12 Email perteroloko.omelhor perterquill@gmail.com Cargo s\u00f3 nos compiuter Desenvolvedor Web Data de in\u00edcio ou entrada 3000-09-07 2022-09-07 Data de cancelamento trabalhando ainda NULL Comportamento O melhor do mundo Proativo","title":"Considera\u00e7\u00f5es Iniciais"},{"location":"guide/#consideracoes-iniciais","text":"","title":"Considera\u00e7\u00f5es Iniciais"},{"location":"guide/#atraso-ao-consumir-a-api","text":"Ao consumir a RegistrosFuncionariosAPI poder\u00e1 haver um certo atraso (delay) de execu\u00e7\u00e3o acarretado por fatores das hospedagens, tanto do banco de dados, quanto da API em si. Observa\u00e7\u00e3o: A primeira executa\u00e7\u00e3o pode apresentar um aumento nesse atraso pelo fato de estar iniciando a sua execu\u00e7\u00e3o no servidor hospedado.","title":"Atraso ao Consumir a API"},{"location":"guide/#consumindo-api-no-navegador","text":"Vale ressaltar que os navegadores s\u00f3 aceitam requisi\u00e7\u00f5es HTTP que utilizam do m\u00e9todo GET , sendo assim algumas rotas ( URL ) desta API n\u00e3o poder\u00e3o ser executadas diretamento pelo navegador. Observa\u00e7\u00e3o Os m\u00e9todos de cada rota est\u00e3o informados neste Guia de Uso e na rota Home da API .","title":"Consumindo API no Navegador"},{"location":"guide/#indicacao-ao-inserir-dados-falsos","text":"Para melhor experi\u00eancia indico o uso de dados falsos que seguem os mesmos padr\u00f5es/formatos e n\u00fameros de caracteres dos dados ver\u00eddicos, como mostrado abaixo: Campos de Preenchimento Dados falsos fora dos padr\u00f5es \u274c Dados falsos seguindo os padr\u00f5es \u2714\ufe0f C\u00f3digo de identifica\u00e7\u00e3o 22sdwA01 2201 Nome senhor das Estrelas Peter Jason Quill Data de nascimento 0093-13-31 1980-12-20 CPF 1.23.12-312312 123.123.123-12 Email perteroloko.omelhor perterquill@gmail.com Cargo s\u00f3 nos compiuter Desenvolvedor Web Data de in\u00edcio ou entrada 3000-09-07 2022-09-07 Data de cancelamento trabalhando ainda NULL Comportamento O melhor do mundo Proativo","title":"Indica\u00e7\u00e3o ao Inserir Dados Falsos"},{"location":"guide/api_information/","text":"Informa\u00e7\u00f5es Sobre a API Para obter mais informa\u00e7\u00f5es da API deve ser informado a URL correspondente a desejada ao navegador. URLs Home - Informa\u00e7\u00f5es do Projeto RegistrosFuncionariosApi: https://registros-funcionarios-api.luishperna.com.br Swagger UI - Interface de usu\u00e1rio visual e interativa da API: https://registros-funcionarios-api.luishperna.com.br/docs OpenAPI - Documento de descri\u00e7\u00e3o/especifica\u00e7\u00e3o da API: https://registros-funcionarios-api.luishperna.com.br/openapi.json","title":"Informa\u00e7\u00f5es sobre a API"},{"location":"guide/api_information/#informacoes-sobre-a-api","text":"Para obter mais informa\u00e7\u00f5es da API deve ser informado a URL correspondente a desejada ao navegador.","title":"Informa\u00e7\u00f5es Sobre a API"},{"location":"guide/api_information/#urls","text":"Home - Informa\u00e7\u00f5es do Projeto RegistrosFuncionariosApi: https://registros-funcionarios-api.luishperna.com.br Swagger UI - Interface de usu\u00e1rio visual e interativa da API: https://registros-funcionarios-api.luishperna.com.br/docs OpenAPI - Documento de descri\u00e7\u00e3o/especifica\u00e7\u00e3o da API: https://registros-funcionarios-api.luishperna.com.br/openapi.json","title":"URLs"},{"location":"guide/checking_api_status/","text":"Verificando Status da API Para verificar o status da API, no c\u00f3digo ou no navegador, deve ser informado a URL correspondente a requisi\u00e7\u00e3o GET - Status da API. URL https://registros-funcionarios-api.luishperna.com.br/status Requisi\u00e7\u00e3o Para realizar esta requisi\u00e7\u00e3o basta utilizar a URL. # Link para verifica\u00e7\u00e3o do status da API https://registros-funcionarios-api.luishperna.com.br/status` Note A verifica\u00e7\u00e3o pode ser feita tanto por c\u00f3digos, quanto diretamente pelo navegador. Resposta da Requisi\u00e7\u00e3o Ao realizar a requisi\u00e7\u00e3o, por parte da API, \u00e9 esperado apenas o retorno de status de sucesso , caso contr\u00e1rio, significa que a API n\u00e3o est\u00e1 sendo executada. Status de Sucesso \u2714\ufe0f Essa resposta informa se a API est\u00e1 rodando. { \"Status\" : \"API rodando\" } Exemplo de Consumo em Python Verificando o status da API em Python main.py Resposta de Sucesso # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo GET - Status da API url = f 'https://registros-funcionarios-api.luishperna.com.br/status' # Resposta da requisi\u00e7\u00e3o feita a partir do link juntamento com o CPF resposta = requests . get ( url ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) { 'S tatus ' : 'API roda n do' }","title":"Verificando Status da API"},{"location":"guide/checking_api_status/#verificando-status-da-api","text":"Para verificar o status da API, no c\u00f3digo ou no navegador, deve ser informado a URL correspondente a requisi\u00e7\u00e3o GET - Status da API.","title":"Verificando Status da API"},{"location":"guide/checking_api_status/#url","text":"https://registros-funcionarios-api.luishperna.com.br/status","title":"URL"},{"location":"guide/checking_api_status/#requisicao","text":"Para realizar esta requisi\u00e7\u00e3o basta utilizar a URL. # Link para verifica\u00e7\u00e3o do status da API https://registros-funcionarios-api.luishperna.com.br/status` Note A verifica\u00e7\u00e3o pode ser feita tanto por c\u00f3digos, quanto diretamente pelo navegador.","title":"Requisi\u00e7\u00e3o"},{"location":"guide/checking_api_status/#resposta-da-requisicao","text":"Ao realizar a requisi\u00e7\u00e3o, por parte da API, \u00e9 esperado apenas o retorno de status de sucesso , caso contr\u00e1rio, significa que a API n\u00e3o est\u00e1 sendo executada.","title":"Resposta da Requisi\u00e7\u00e3o"},{"location":"guide/checking_api_status/#status-de-sucesso","text":"Essa resposta informa se a API est\u00e1 rodando. { \"Status\" : \"API rodando\" }","title":"Status de Sucesso \u2714\ufe0f"},{"location":"guide/checking_api_status/#exemplo-de-consumo-em-python","text":"Verificando o status da API em Python main.py Resposta de Sucesso # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo GET - Status da API url = f 'https://registros-funcionarios-api.luishperna.com.br/status' # Resposta da requisi\u00e7\u00e3o feita a partir do link juntamento com o CPF resposta = requests . get ( url ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) { 'S tatus ' : 'API roda n do' }","title":"Exemplo de Consumo em Python"},{"location":"guide/how_to_modify_a_registry/","text":"Como Modificar um Registro Para modificar uma informa\u00e7\u00e3o de um registro na API, no c\u00f3digo, deve ser informado a URL correspondente a requisi\u00e7\u00e3o PATCH e o corpo da requisi\u00e7\u00e3o em JSON . URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/modificacoes Corpo da Requisi\u00e7\u00e3o O corpo da requisi\u00e7\u00e3o deve ser no formato JSON contendo as seguintes chaves : codigo \u2794 C\u00f3digo de cadastro do funcion\u00e1rio(a). atributo \u2794 Atributo no qual dejesa modificar. novo_valor \u2794 Novo valor para o qual deseja ser modificado. Observa\u00e7\u00e3o A modifica\u00e7\u00e3o s\u00f3 pode ser realizada nos atributos: cargo , data_inicio , data_cancelamento e comportamento . Os valores correspondentes as chaves devem obedecer aos tipos de dados mostrado abaixo: { \"codigo\" : i nt , \"atributo\" : \"string\" , \"novo_valor\" : \"string\" } Respostas da Requisi\u00e7\u00e3o Ao realizar a requisi\u00e7\u00e3o pode-se retornar uma das duas respostas: status de sucesso ou status de erro . Status de Sucesso \u2714\ufe0f Essa resposta informa a modifica\u00e7\u00e3o realizada no registro do funcion\u00e1rio(a). { \"Status\" : \"2201 - Modifica\u00e7\u00e3o realizado com sucesso!\" , \"Atualiza\u00e7\u00e3o\" : \"Atributo data_inicio setado para 2022-09-12\" } Status de Erro \u274c Essa resposta informa o tipo de erro detectado ao tentar realizar a requisi\u00e7\u00e3o. # Erro ao tentar modi f icar um a tr ibu t o n \u00e3o permi t ido { \"Status\" : \"Erro ao modificar\" , \"Tipo de erro\" : \"O atributo codigo n\u00e3o pode ser modificado\" } # Erro ao i nf ormar um a tr ibu t o ou valor i n corre ta me nte { \"Status\" : \"Erro ao modificar\" , \"Tipo de erro\" : \"1054 (42S22): Unknown column 'dat_inicio' in 'field list'\" , \"Causas\" : \"Dados faltantes ou incorretos\" } Exemplo de Consumo em Python Modificando um registro em Python main.py Resposta de Sucesso Resposta de Erro # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo PATCH - Modificar um registro url = 'https://registros-funcionarios-api.luishperna.com.br/funcionarios/modificacoes' # Modifica\u00e7\u00f5es no formato JSON a ser enviado na requisi\u00e7\u00e3o PATCH - Modificar um registro modificacoes = '''{ \"codigo\": \"2201\", \"atributo\": \"data_inicio\", \"novo_valor\": \"2022-09-12\" }''' # Resposta da requisi\u00e7\u00e3o feita a partir do link e JSON passados como par\u00e2metros resposta = requests . patch ( url , data = modificacoes ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) {'Status': '2201 - Modifica\u00e7\u00e3o realizado com sucesso!', 'Atualiza\u00e7\u00e3o': 'Atributo data_inicio setado para 2022-09-12'} # Erro ao tentar modificar um atributo n\u00e3o permitido {'Status': 'Erro ao modificar', 'Tipo de erro': 'O atributo codigo n\u00e3o pode ser modificado'} # Erro ao informar um atributo ou valor incorretamente {'Status': 'Erro ao modificar', 'Tipo de erro': \"1054 (42S22): Unknown column 'dat_inicio' in 'field list'\", 'Causas': 'Dados faltantes ou incorretos'}","title":"Como Modificar um Registro"},{"location":"guide/how_to_modify_a_registry/#como-modificar-um-registro","text":"Para modificar uma informa\u00e7\u00e3o de um registro na API, no c\u00f3digo, deve ser informado a URL correspondente a requisi\u00e7\u00e3o PATCH e o corpo da requisi\u00e7\u00e3o em JSON .","title":"Como Modificar um Registro"},{"location":"guide/how_to_modify_a_registry/#url","text":"https://registros-funcionarios-api.luishperna.com.br/funcionarios/modificacoes","title":"URL"},{"location":"guide/how_to_modify_a_registry/#corpo-da-requisicao","text":"O corpo da requisi\u00e7\u00e3o deve ser no formato JSON contendo as seguintes chaves : codigo \u2794 C\u00f3digo de cadastro do funcion\u00e1rio(a). atributo \u2794 Atributo no qual dejesa modificar. novo_valor \u2794 Novo valor para o qual deseja ser modificado. Observa\u00e7\u00e3o A modifica\u00e7\u00e3o s\u00f3 pode ser realizada nos atributos: cargo , data_inicio , data_cancelamento e comportamento . Os valores correspondentes as chaves devem obedecer aos tipos de dados mostrado abaixo: { \"codigo\" : i nt , \"atributo\" : \"string\" , \"novo_valor\" : \"string\" }","title":"Corpo da Requisi\u00e7\u00e3o"},{"location":"guide/how_to_modify_a_registry/#respostas-da-requisicao","text":"Ao realizar a requisi\u00e7\u00e3o pode-se retornar uma das duas respostas: status de sucesso ou status de erro .","title":"Respostas da Requisi\u00e7\u00e3o"},{"location":"guide/how_to_modify_a_registry/#status-de-sucesso","text":"Essa resposta informa a modifica\u00e7\u00e3o realizada no registro do funcion\u00e1rio(a). { \"Status\" : \"2201 - Modifica\u00e7\u00e3o realizado com sucesso!\" , \"Atualiza\u00e7\u00e3o\" : \"Atributo data_inicio setado para 2022-09-12\" }","title":"Status de Sucesso \u2714\ufe0f"},{"location":"guide/how_to_modify_a_registry/#status-de-erro","text":"Essa resposta informa o tipo de erro detectado ao tentar realizar a requisi\u00e7\u00e3o. # Erro ao tentar modi f icar um a tr ibu t o n \u00e3o permi t ido { \"Status\" : \"Erro ao modificar\" , \"Tipo de erro\" : \"O atributo codigo n\u00e3o pode ser modificado\" } # Erro ao i nf ormar um a tr ibu t o ou valor i n corre ta me nte { \"Status\" : \"Erro ao modificar\" , \"Tipo de erro\" : \"1054 (42S22): Unknown column 'dat_inicio' in 'field list'\" , \"Causas\" : \"Dados faltantes ou incorretos\" }","title":"Status de Erro \u274c"},{"location":"guide/how_to_modify_a_registry/#exemplo-de-consumo-em-python","text":"Modificando um registro em Python main.py Resposta de Sucesso Resposta de Erro # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo PATCH - Modificar um registro url = 'https://registros-funcionarios-api.luishperna.com.br/funcionarios/modificacoes' # Modifica\u00e7\u00f5es no formato JSON a ser enviado na requisi\u00e7\u00e3o PATCH - Modificar um registro modificacoes = '''{ \"codigo\": \"2201\", \"atributo\": \"data_inicio\", \"novo_valor\": \"2022-09-12\" }''' # Resposta da requisi\u00e7\u00e3o feita a partir do link e JSON passados como par\u00e2metros resposta = requests . patch ( url , data = modificacoes ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) {'Status': '2201 - Modifica\u00e7\u00e3o realizado com sucesso!', 'Atualiza\u00e7\u00e3o': 'Atributo data_inicio setado para 2022-09-12'} # Erro ao tentar modificar um atributo n\u00e3o permitido {'Status': 'Erro ao modificar', 'Tipo de erro': 'O atributo codigo n\u00e3o pode ser modificado'} # Erro ao informar um atributo ou valor incorretamente {'Status': 'Erro ao modificar', 'Tipo de erro': \"1054 (42S22): Unknown column 'dat_inicio' in 'field list'\", 'Causas': 'Dados faltantes ou incorretos'}","title":"Exemplo de Consumo em Python"},{"location":"guide/how_to_query_a_registry/","text":"Como Consultar um Registro Para consultar um registro na API, no c\u00f3digo ou navegador, deve ser informado a URL correspondente a requisi\u00e7\u00e3o GET - Consultar um registro, seguido do CPF do funcion\u00e1rio(a). URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/{cpf} Requisi\u00e7\u00e3o Para realizar esta requisi\u00e7\u00e3o basta alterar o {cpf} por um n\u00famero de CPF j\u00e1 cadastrado. # Link base https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/{cpf}` # Consultando funcion\u00e1rio com o n\u00famero de CPF 123.123.123-12 https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/123.123.123-12 Observa\u00e7\u00e3o A consulta pode ser feita tanto por c\u00f3digos, quanto diretamente pelo navegador. Respostas da Requisi\u00e7\u00e3o Ao realizar a requisi\u00e7\u00e3o pode-se retornar uma das duas respostas: status de sucesso ou status de erro . Status de Sucesso \u2714\ufe0f Essa resposta informa os dados do funcion\u00e1rio(a) cadastrado(a). { \"codigo\" : \"2201\" , \"nome\" : \"Peter Jason Quill\" , \"data_nascimento\" : \"1980-12-20\" , \"cpf\" : \"123.123.123-12\" , \"email\" : \"perterquill@gmail.com\" , \"cargo\" : \"Desenvolvedor Web\" , \"data_inicio\" : \"2022-09-07\" , \"data_cancelamento\" : \"None\" , \"comportamento\" : \"Proativo\" } Status de Erro \u274c Essa resposta informa o tipo de erro detectado ao tentar realizar a requisi\u00e7\u00e3o. { \"Status\" : \"Erro ao consultar\" , \"Tipo de erro\" : \"CPF incorreto ou n\u00e3o cadastrado\" } Exemplo de Consumo em Python Consultando um registro em Python main.py Resposta de Sucesso Resposta de Erro # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Informa\u00e7\u00e3o do n\u00famero do CPF cpf = \"123.123.123-12\" # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo GET - Consultar um registro url = f 'https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/ { cpf } ' # Resposta da requisi\u00e7\u00e3o feita a partir do link juntamento com o CPF resposta = requests . get ( url ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) { 'codigo' : ' 2201 ' , ' n ome' : 'Pe ter Jaso n Quill' , 'da ta _ nas cime nt o' : ' 1980-12-20 ' , 'cp f ' : ' 123.123.123-12 ' , 'email' : 'per ter quill@gmail.com' , 'cargo' : 'Dese n volvedor Web' , 'da ta _i n icio' : ' 2022-09-07 ' , 'da ta _ca n celame nt o' : 'No ne ' , 'compor ta me nt o' : 'Proa t ivo' } { 'S tatus ' : 'Erro ao co nsultar ' , 'Tipo de erro' : 'CPF i n corre t o ou n \u00e3o cadas tra do' }","title":"Como Consultar um Registro"},{"location":"guide/how_to_query_a_registry/#como-consultar-um-registro","text":"Para consultar um registro na API, no c\u00f3digo ou navegador, deve ser informado a URL correspondente a requisi\u00e7\u00e3o GET - Consultar um registro, seguido do CPF do funcion\u00e1rio(a).","title":"Como Consultar um Registro"},{"location":"guide/how_to_query_a_registry/#url","text":"https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/{cpf}","title":"URL"},{"location":"guide/how_to_query_a_registry/#requisicao","text":"Para realizar esta requisi\u00e7\u00e3o basta alterar o {cpf} por um n\u00famero de CPF j\u00e1 cadastrado. # Link base https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/{cpf}` # Consultando funcion\u00e1rio com o n\u00famero de CPF 123.123.123-12 https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/123.123.123-12 Observa\u00e7\u00e3o A consulta pode ser feita tanto por c\u00f3digos, quanto diretamente pelo navegador.","title":"Requisi\u00e7\u00e3o"},{"location":"guide/how_to_query_a_registry/#respostas-da-requisicao","text":"Ao realizar a requisi\u00e7\u00e3o pode-se retornar uma das duas respostas: status de sucesso ou status de erro .","title":"Respostas da Requisi\u00e7\u00e3o"},{"location":"guide/how_to_query_a_registry/#status-de-sucesso","text":"Essa resposta informa os dados do funcion\u00e1rio(a) cadastrado(a). { \"codigo\" : \"2201\" , \"nome\" : \"Peter Jason Quill\" , \"data_nascimento\" : \"1980-12-20\" , \"cpf\" : \"123.123.123-12\" , \"email\" : \"perterquill@gmail.com\" , \"cargo\" : \"Desenvolvedor Web\" , \"data_inicio\" : \"2022-09-07\" , \"data_cancelamento\" : \"None\" , \"comportamento\" : \"Proativo\" }","title":"Status de Sucesso \u2714\ufe0f"},{"location":"guide/how_to_query_a_registry/#status-de-erro","text":"Essa resposta informa o tipo de erro detectado ao tentar realizar a requisi\u00e7\u00e3o. { \"Status\" : \"Erro ao consultar\" , \"Tipo de erro\" : \"CPF incorreto ou n\u00e3o cadastrado\" }","title":"Status de Erro \u274c"},{"location":"guide/how_to_query_a_registry/#exemplo-de-consumo-em-python","text":"Consultando um registro em Python main.py Resposta de Sucesso Resposta de Erro # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Informa\u00e7\u00e3o do n\u00famero do CPF cpf = \"123.123.123-12\" # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo GET - Consultar um registro url = f 'https://registros-funcionarios-api.luishperna.com.br/funcionarios/consultas/ { cpf } ' # Resposta da requisi\u00e7\u00e3o feita a partir do link juntamento com o CPF resposta = requests . get ( url ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) { 'codigo' : ' 2201 ' , ' n ome' : 'Pe ter Jaso n Quill' , 'da ta _ nas cime nt o' : ' 1980-12-20 ' , 'cp f ' : ' 123.123.123-12 ' , 'email' : 'per ter quill@gmail.com' , 'cargo' : 'Dese n volvedor Web' , 'da ta _i n icio' : ' 2022-09-07 ' , 'da ta _ca n celame nt o' : 'No ne ' , 'compor ta me nt o' : 'Proa t ivo' } { 'S tatus ' : 'Erro ao co nsultar ' , 'Tipo de erro' : 'CPF i n corre t o ou n \u00e3o cadas tra do' }","title":"Exemplo de Consumo em Python"},{"location":"guide/how_to_register_a_record/","text":"Como Cadastrar um Registro Para cadastrar um registro na API, no c\u00f3digo, deve ser informado a URL correspondente a requisi\u00e7\u00e3o POST e o corpo da requisi\u00e7\u00e3o em JSON . URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/cadastros Corpo da Requisi\u00e7\u00e3o O corpo da requisi\u00e7\u00e3o deve ser no formato JSON contendo as seguintes chaves : nome, data_nascimento, cpf, email, codigo, cargo, data_inicio, data_cancelamento e comportamento. Os valores correspondentes as chaves devem obedecer aos tipos de dados mostrado abaixo: { \"nome\" : \"string\" , \"data_nascimento\" : \"string\" , \"cpf\" : \"string\" , \"email\" : \"string\" , \"codigo\" : i nt , \"cargo\" : \"string\" , \"data_inicio\" : \"string\" , \"data_cancelamento\" : \"string\" , \"comportamento\" : \"string\" } Observa\u00e7\u00e3o Caso o funcion\u00e1rio(a) ainda esteja ativo(a) no cargo passe NULL ou null como valor da chave data_cancelamento. Respostas da Requisi\u00e7\u00e3o Ao realizar a requisi\u00e7\u00e3o pode-se retornar uma das duas respostas: status de sucesso ou status de erro . Status de Sucesso \u2714\ufe0f Essa resposta informa o funcion\u00e1rio(a) cadastrado(a) e seu c\u00f3digo. { \"Status\" : \"Cadastrado realizado com sucesso!\" , \"Funcion\u00e1rio(a)\" : \"Peter Jason Quill\" , \"C\u00f3digo\" : \"2201\" } Status de Erro \u274c Essa resposta informa o tipo de erro detectado ao tentar realizar a requisi\u00e7\u00e3o. { \"Status\" : \"Erro ao cadastrar\" , \"Tipo de erro\" : \"1062 (23000): Duplicate entry '2201' for key 'dados_pessoais.codigo'\" , \"Causas\" : \"Dados duplicados, faltantes ou incorretos\" } Exemplo de Consumo em Python Cadastrando um registro em Python main.py Resposta de Sucesso Resposta de Erro # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo POST - Cadastrar um registro url = 'https://registros-funcionarios-api.luishperna.com.br/funcionarios/cadastros' # Informa\u00e7\u00f5es no formato JSON a ser enviado na requisi\u00e7\u00e3o POST - Cadastrar um registro informacoes = '''{ \"nome\": \"Peter Jason Quill\", \"data_nascimento\": \"1980-12-20\", \"cpf\": \"123.123.123-12\", \"email\": \"perterquill@gmail.com\", \"codigo\": 2201, \"cargo\": \"Desenvolvedor Web\", \"data_inicio\": \"2022-09-07\", \"data_cancelamento\": \"NULL\", \"comportamento\": \"Proativo\" }''' # Resposta da requisi\u00e7\u00e3o feita a partir do link e JSON passados como par\u00e2metros resposta = requests . post ( url , data = informacoes ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) {'Status': 'Cadastrado realizado com sucesso!', 'Funcion\u00e1rio(a)': 'Peter Jason Quill', 'C\u00f3digo': '2201'} {'Status': 'Erro ao cadastrar', 'Tipo de erro': \"1062 (23000): Duplicate entry '2201' for key 'dados_pessoais.codigo'\", 'Causas': 'Dados duplicados, faltantes ou incorretos'}","title":"Como Cadastrar um Registro"},{"location":"guide/how_to_register_a_record/#como-cadastrar-um-registro","text":"Para cadastrar um registro na API, no c\u00f3digo, deve ser informado a URL correspondente a requisi\u00e7\u00e3o POST e o corpo da requisi\u00e7\u00e3o em JSON .","title":"Como Cadastrar um Registro"},{"location":"guide/how_to_register_a_record/#url","text":"https://registros-funcionarios-api.luishperna.com.br/funcionarios/cadastros","title":"URL"},{"location":"guide/how_to_register_a_record/#corpo-da-requisicao","text":"O corpo da requisi\u00e7\u00e3o deve ser no formato JSON contendo as seguintes chaves : nome, data_nascimento, cpf, email, codigo, cargo, data_inicio, data_cancelamento e comportamento. Os valores correspondentes as chaves devem obedecer aos tipos de dados mostrado abaixo: { \"nome\" : \"string\" , \"data_nascimento\" : \"string\" , \"cpf\" : \"string\" , \"email\" : \"string\" , \"codigo\" : i nt , \"cargo\" : \"string\" , \"data_inicio\" : \"string\" , \"data_cancelamento\" : \"string\" , \"comportamento\" : \"string\" } Observa\u00e7\u00e3o Caso o funcion\u00e1rio(a) ainda esteja ativo(a) no cargo passe NULL ou null como valor da chave data_cancelamento.","title":"Corpo da Requisi\u00e7\u00e3o"},{"location":"guide/how_to_register_a_record/#respostas-da-requisicao","text":"Ao realizar a requisi\u00e7\u00e3o pode-se retornar uma das duas respostas: status de sucesso ou status de erro .","title":"Respostas da Requisi\u00e7\u00e3o"},{"location":"guide/how_to_register_a_record/#status-de-sucesso","text":"Essa resposta informa o funcion\u00e1rio(a) cadastrado(a) e seu c\u00f3digo. { \"Status\" : \"Cadastrado realizado com sucesso!\" , \"Funcion\u00e1rio(a)\" : \"Peter Jason Quill\" , \"C\u00f3digo\" : \"2201\" }","title":"Status de Sucesso \u2714\ufe0f"},{"location":"guide/how_to_register_a_record/#status-de-erro","text":"Essa resposta informa o tipo de erro detectado ao tentar realizar a requisi\u00e7\u00e3o. { \"Status\" : \"Erro ao cadastrar\" , \"Tipo de erro\" : \"1062 (23000): Duplicate entry '2201' for key 'dados_pessoais.codigo'\" , \"Causas\" : \"Dados duplicados, faltantes ou incorretos\" }","title":"Status de Erro \u274c"},{"location":"guide/how_to_register_a_record/#exemplo-de-consumo-em-python","text":"Cadastrando um registro em Python main.py Resposta de Sucesso Resposta de Erro # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo POST - Cadastrar um registro url = 'https://registros-funcionarios-api.luishperna.com.br/funcionarios/cadastros' # Informa\u00e7\u00f5es no formato JSON a ser enviado na requisi\u00e7\u00e3o POST - Cadastrar um registro informacoes = '''{ \"nome\": \"Peter Jason Quill\", \"data_nascimento\": \"1980-12-20\", \"cpf\": \"123.123.123-12\", \"email\": \"perterquill@gmail.com\", \"codigo\": 2201, \"cargo\": \"Desenvolvedor Web\", \"data_inicio\": \"2022-09-07\", \"data_cancelamento\": \"NULL\", \"comportamento\": \"Proativo\" }''' # Resposta da requisi\u00e7\u00e3o feita a partir do link e JSON passados como par\u00e2metros resposta = requests . post ( url , data = informacoes ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) {'Status': 'Cadastrado realizado com sucesso!', 'Funcion\u00e1rio(a)': 'Peter Jason Quill', 'C\u00f3digo': '2201'} {'Status': 'Erro ao cadastrar', 'Tipo de erro': \"1062 (23000): Duplicate entry '2201' for key 'dados_pessoais.codigo'\", 'Causas': 'Dados duplicados, faltantes ou incorretos'}","title":"Exemplo de Consumo em Python"},{"location":"guide/how_to_unregister/","text":"Como Anular um Registro Para anular um registro na API, no c\u00f3digo, deve ser informado a URL correspondente a requisi\u00e7\u00e3o DELETE seguido do CPF do funcion\u00e1rio(a). URL https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/{cpf} Requisi\u00e7\u00e3o Para realizar est\u00e1 requisi\u00e7\u00e3o basta alterar o {cpf} por um n\u00famero de CPF j\u00e1 cadastrado. # Link base https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/{cpf}` # Anulando funcion\u00e1rio correspondente ao n\u00famero de CPF 123.123.123-12 https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/123.123.123-12 Respostas da Requisi\u00e7\u00e3o Ao realizar a requisi\u00e7\u00e3o \u00e9 esperado apenas um retorno de status de sucesso . Status de Sucesso \u2714\ufe0f Essa resposta informa o CPF do(a) funcion\u00e1rio(a) que foi deletado. { \"Status\" : \"Anula\u00e7\u00e3o realizada com sucesso!\" , \"Anula\u00e7\u00e3o\" : \"Deletado registro com CPF 123.123.123-12\" } Observa\u00e7\u00e3o A resposta ser\u00e1 a mesma caso o CPF n\u00e3o esteja registrado. Exemplo de Consumo em Python Anulando um registro em Python main.py Resposta de Sucesso # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Informa\u00e7\u00e3o do n\u00famero do CPF cpf = \"123.123.123-12\" # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo DELETE - Anular um registro url = f 'https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/ { cpf } ' # Resposta da requisi\u00e7\u00e3o feita a partir do link juntamento com o CPF resposta = requests . delete ( url ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) { 'S tatus ' : 'A nula \u00e7\u00e3o realizada com sucesso!' , 'A nula \u00e7\u00e3o' : 'Dele ta do regis tr o com CPF 123.123.123-12 ' }","title":"Como Anular um Registro"},{"location":"guide/how_to_unregister/#como-anular-um-registro","text":"Para anular um registro na API, no c\u00f3digo, deve ser informado a URL correspondente a requisi\u00e7\u00e3o DELETE seguido do CPF do funcion\u00e1rio(a).","title":"Como Anular um Registro"},{"location":"guide/how_to_unregister/#url","text":"https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/{cpf}","title":"URL"},{"location":"guide/how_to_unregister/#requisicao","text":"Para realizar est\u00e1 requisi\u00e7\u00e3o basta alterar o {cpf} por um n\u00famero de CPF j\u00e1 cadastrado. # Link base https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/{cpf}` # Anulando funcion\u00e1rio correspondente ao n\u00famero de CPF 123.123.123-12 https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/123.123.123-12","title":"Requisi\u00e7\u00e3o"},{"location":"guide/how_to_unregister/#respostas-da-requisicao","text":"Ao realizar a requisi\u00e7\u00e3o \u00e9 esperado apenas um retorno de status de sucesso .","title":"Respostas da Requisi\u00e7\u00e3o"},{"location":"guide/how_to_unregister/#status-de-sucesso","text":"Essa resposta informa o CPF do(a) funcion\u00e1rio(a) que foi deletado. { \"Status\" : \"Anula\u00e7\u00e3o realizada com sucesso!\" , \"Anula\u00e7\u00e3o\" : \"Deletado registro com CPF 123.123.123-12\" } Observa\u00e7\u00e3o A resposta ser\u00e1 a mesma caso o CPF n\u00e3o esteja registrado.","title":"Status de Sucesso \u2714\ufe0f"},{"location":"guide/how_to_unregister/#exemplo-de-consumo-em-python","text":"Anulando um registro em Python main.py Resposta de Sucesso # Importando a biblioteca requests para trabalhar com solicita\u00e7\u00f5es HTTP import requests # Informa\u00e7\u00e3o do n\u00famero do CPF cpf = \"123.123.123-12\" # Link p\u00fablico da API para requisi\u00e7\u00f5es do tipo DELETE - Anular um registro url = f 'https://registros-funcionarios-api.luishperna.com.br/funcionarios/anulacoes/ { cpf } ' # Resposta da requisi\u00e7\u00e3o feita a partir do link juntamento com o CPF resposta = requests . delete ( url ) # Obtendo o JSON da resposta da API dados = resposta . json () # Mostrando a resposta no terminal print ( dados ) { 'S tatus ' : 'A nula \u00e7\u00e3o realizada com sucesso!' , 'A nula \u00e7\u00e3o' : 'Dele ta do regis tr o com CPF 123.123.123-12 ' }","title":"Exemplo de Consumo em Python"}]}